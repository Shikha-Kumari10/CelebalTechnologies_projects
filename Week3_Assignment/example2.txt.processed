WHY USE ASYNCHRONOUS PROGRAMMING IN NODEJS?

-> NON-BLOCKING I/O: NODEJS IS COMMONLY USED FOR TASKS LIKE FILE OPERATIONS, API CALLS, AND DATABASE QUERIES. WITH ASYNC 
                    PROGRAMMING, THESE TASKS RUN IN THE BACKGROUND WITHOUT STOPPING THE REST OF THE CODE.

-> IMPROVED PERFORMANCE & SCALABILITY: THIS IMPROVES PERFORMANCE AND SCALABILITY BY ALLOWING MULTIPLE REQUESTS TO BE HANDLED AT 
                    THE SAME TIME WITHOUT DELAYS.

-> EVENT-DRIVEN EXECUTION: NODEJS FOLLOWS AN EVENT-DRIVEN APPROACH WHERE THE EVENT LOOP LISTENS FOR TASKS AND RUNS THEM ONLY WHEN 
                    NEEDED.

-> FASTER API CALLS: THIS MAKES API CALLS FASTER SINCE MULTIPLE DATA SOURCES CAN BE QUERIED AT THE SAME TIME, REDUCING WAIT TIME.

-> OPTIMIZED CPU & MEMORY USAGE: UNLIKE MULTI-THREADED MODELS, NODEJS USES A SINGLE-THREADED EVENT LOOP, WHICH OPTIMIZES CPU AND
                     MEMORY USAGE BY AVOIDING UNNECESSARY RESOURCE CONSUMPTION.